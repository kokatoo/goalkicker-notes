#+STARTUP: showeverything
#+title: Bash Notes for Professionals

* Chapter 39: Read a file (data stream, variable) line-by-line (and/or field-by- field)?

| Parameter  | Details                                                                                |
|------------+----------------------------------------------------------------------------------------|
| ~IFS~      | Internal field separator                                                               |
| ~file~     | A file name/path                                                                       |
| ~-r~       | Prevents backslash interpretation when used with read                                  |
| ~-t~       | Removes a trailing newline from each line read by readarray                            |
| ~-d DELIM~ | Continue until the first character of ~DELIM~ is read (with read), rather than newline |

** Section 39.1: Looping through a file line by line

#+begin_src bash
  while IFS= read -r line; do
      echo "$line"
  done < file
#+end_src

   If file may not include a newline at the end, then:

#+begin_src bash
  while IFS= read -r line  || [ -n "$line" ]; do
    echo "$line"
  done < file
#+end_src

** Section 39.2: Looping through the output of a command field by field

   Let's assume that the field separator is:

#+begin_src bash
    while IFS= read -d : -r field || [ -n "$field" ]; do
      echo "**$field**"
    done < <(ping localhost)
#+end_src

   Or with a pipe:

#+begin_src bash
  ping localhost | while IFS= read -d : -r field || [ -n "$field" ]; do
    echo "**$field**"
  done
#+end_src

** Section 39.3: Read lines of a file into an array

#+begin_src bash
  readarray -t arr < file
#+end_src

   Or with a loop:

#+begin_src bash
  arr=()
  while IFS= read -r line; do
      arr+=("$line")
  done < file
#+end_src

** Section 39.4: Read lines of a string into an array

#+begin_src bash
  var='line 1
  line 2
  line3'
  readarray -t arr <<< "$var"
#+end_src

   or with a loop:

#+begin_src bash
  arr=()
  while IFS= read -r line; do
      arr+=("$line")
  done <<< "$var"
#+end_src

** Section 39.5: Looping through a string line by line

#+begin_src bash
  var='line 1
  line 2
  line3'

  while IFS= read -r line; do
      echo "-$line-"
  done <<< "$var"
#+end_src

   or

#+begin_src bash
  readarray -t arr <<< "$var"
  for i in "${arr[@]}"; do
      echo "-$i-"
  done
#+end_src

** Section 39.6: Looping through the output of a command line by line

#+begin_src bash
  while IFS= read -r line; do
      echo "**$line**"
  done < <(ping google.com)
#+end_src

   or with a pipe:

#+begin_src bash
  ping google.com |
  while IFS= read -r line; do
      echo "**$line**"
  done
#+end_src

** Section 39.7: Read a file field by field

   Let's assume that the field separator is : (colon) in the file file.

#+begin_src bash
  while IFS= read -d : -r field || [ -n "$field" ]; do
      echo "-*$field*-"
  done <file
#+end_src

   For a content:

#+begin_src bash
  first : se
  con
  d:
     Thi rd:
     Fourth
#+end_src

   The output is:

#+begin_src bash
  -*first *-
  -* se
  con
  d*-
  -*
     Thi rd*-
  -*
     Fourth
  ,*-
#+end_src

** Section 39.8: Read a string field by field

   Let's assume that the field separator is:

#+begin_src bash
  var='line: 1
  line: 2
  line3'

  while IFS= read -d : -r field || [ -n "$field" ]; do
      echo "-$field-"
  done <<< "$var"
#+end_src

   Output:

#+begin_src bash
  -line-
  - 1
  line-
  - 2
  line3
  -
#+end_src

** Section 39.9: Read fields of a file into an array

   Let's assume that the field separator is:

#+begin_src bash
  arr=()

  while IFS= read -d : -r field || [ -n "$field" ]; do
      arr+=("$field")
  done < file
#+end_src

** Section 39.10: Read fields of a string into an array

   Let's assume that the field separator is:

#+begin_src bash
  var='1:2:3:4:
  newline'

  arr=()
  while IFS= read -d : -r field || [ -n "$field" ]; do
      arr+=("$field")
  done <<< "$var"

  echo "${arr[4]}"
#+end_src

   Output:

#+begin_src bash
  newline
#+end_src

** Section 39.11: Reads file (/etc/passwd) line by line and field by field

#+begin_src bash
  #!/bin/bash

  FILENAME="/etc/passwd"
  while IFS=: read -r username password userid groupid comment homedir cmdshell; do
      echo "$username, $userid, $comment $homedir"
  done < $FILENAME
#+end_src

   In unix password file, user information is stored line by line, each line
   consisting of information for a user separated by colon (~:~) character. In
   this example while reading the file line by line, the line is also split into
   fields using colon character as delimiter which is indicated by the value
   given for IFS.

   *Sample input*

#+begin_src bash
  mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
  pulse:x:497:495:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin
  sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
  tomcat:x:91:91:Apache Tomcat:/usr/share/tomcat6:/sbin/nologin
  webalizer:x:67:67:Webalizer:/var/www/usage:/sbin/nologin
#+end_src

   *Sample Output*

#+begin_src bash
  mysql, 27, MySQL Server /var/lib/mysql
  pulse, 497, PulseAudio System Daemon /var/run/pulse
  sshd, 74, Privilege-separated SSH /var/empty/sshd
  tomcat, 91, Apache Tomcat /usr/share/tomcat6
  webalizer, 67, Webalizer /var/www/usage
#+end_src

   To read line by line and have the entire line assigned to variable, following
   is a modified version of the example. Note that we have only one variable by
   name line mentioned here.

#+begin_src bash
  #!/bin/bash
  FILENAME="/etc/passwd"

  while IFS= read -r line; do
      echo "$line"
  done < $FILENAME
#+end_src

   *Sample Input*

#+begin_src bash
  mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
  pulse:x:497:495:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin
  sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
  tomcat:x:91:91:Apache Tomcat:/usr/share/tomcat6:/sbin/nologin
  webalizer:x:67:67:Webalizer:/var/www/usage:/sbin/nologin
#+end_src

   *Sample Output*

#+begin_src bash
  mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
  pulse:x:497:495:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin
  sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
  tomcat:x:91:91:Apache Tomcat:/usr/share/tomcat6:/sbin/nologin
  webalizer:x:67:67:Webalizer:/var/www/usage:/sbin/nologin
#+end_src

