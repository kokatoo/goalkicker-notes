#+STARTUP: showeverything
#+title: Linux Notes for Professionals

* Chapter 6: Getting System Information

  Collection of commands to fetch system related information.

** Section 6.1: Statistics about CPU, Memory, Network and Disk (I/O operations)

   To get general statistics about main components of Linux family of ~stat~
   commands are extremely useful

*** CPU

    To get processors related statistics you can use ~mpstat~ command but with
    some options it will provide better visibility:

#+begin_src bash
  $ mpstat 2 10
#+end_src

*** Memory

    We all know command ~free~ to show amount of (remaining) RAM but to see all
    statistic including I/O operations:

#+begin_src bash
  $ vmstat 2 10
#+end_src

*** Disk

    To get general information about your disk operations in real time you can
    utilise ~iostat~.

#+begin_src bash
  $ iostat -kx 2
#+end_src

*** Network

    To be able to see what is happening with your network services you can use
    ~netstat~

#+begin_src bash
  $ netstat -ntlp # open TCP sockets
  $ netstat -nulp # open UDP sockets
  $ netstat -nxlp # open Unix sockets
#+end_src

   But you can find useful monitoring to see network traffic in real time:

#+begin_src bash
  $ sudo iftop
#+end_src

*** Optional

    To generate statistics in real time related to I/O operations across all
    components you can use ~dstat~. That tool that is a versatile replacement for
    ~vmstat~, ~iostat~ and ~ifstat~

** Section 6.2: Using tools like lscpu and lshw

   By using tools like ~lscpu~ as ~lscpu~ is an easy way to get CPU information.

#+begin_src bash
  $ lscpu
  Architecture:        x86_64
  CPU op-mode(s):      32-bit, 64-bit
  Byte Order:          Little Endian
  CPU(s):              4
  On-line CPU(s) list: 0-3
  Thread(s) per core:  1
  Core(s) per socket:  4
  Socket(s):           1
  NUMA node(s):        1
  Vendor ID:           GenuineIntel
  CPU family:          6
  Model:               23
  Stepping:            10
  CPU MHz:             1998.000
  BogoMIPS:            5303.14
  Virtualization:      VT-x
  L1d cache:           32K
  L1i cache:           32K
  L2 cache:            2048K
  NUMA node0 CPU(s):   0-3
#+end_src

   By using tool ~lshw~

#+begin_src bash
  $ lshw | grep cpu

  df1-ws-5084
      description: Computer
      width: 64 bits
      capabilities: vsyscall32
    *-core
         description: Motherboard
         physical id: 0 
        *-memory
             description: System memory
             physical id: 0
             size: 5881MiB
        *-cpu
             product: Intel(R) Pentium(R) CPU G3220 @ 3.00GHz
             vendor: Intel Corp.
             physical id: 1
             bus info: cpu@0
             size: 3GHz
             capacity: 3GHz
             width: 64 bits
#+end_src

** Section 6.3: List Hardware

*** Ubuntu:

    ~lshw~ is a small tool to extract detailed information on the hardware
    configuration of the machine. It can report exact memory configuration,
    firmware version, mainboard configuration, CPU version and speed, cache
    configuration, bus speed, etc.

#+begin_src bash
  $ sudo lshw | less (or more)
  $ sudo lshw -html > myhardware.html
  $ sudo lshw -xml > myhardware.xml
#+end_src

    To show PCI info

#+begin_src bash
  $ lspci -tv
#+end_src

    To see USB info

#+begin_src bash
  $ lsusb -tv
#+end_src

    To display BIOS information

#+begin_src bash
  $ dmidecode -q | less
#+end_src

    To see specific information about disk (disk sda in example) you can use:

#+begin_src bash
  $ hdparm -i /dev/sda
#+end_src

    Few additional utilities/commands will help gather some extra information:

#+begin_src bash
  $ smartctl -A /dev/sda | grep Power_On_Hours # How long has this disk (system) been powered on in total
  $ hdparm -tT /dev/sda # Do a read speed test on disk sda
  $ badblocks -s /dev/sda # Test for unreadable blocks on disk sda
#+end_src

** Section 6.4: Find CPU model/speed information

   *Ubuntu:*

#+begin_src bash
  $ cat /proc/cpuinfo
#+end_src

    Sample Output:

#+begin_src bash
  processor : 0
  vendor_id : GenuineIntel
  cpu family : 6
  model : 15
  model name : Intel(R) Core(TM)2 Quad CPU Q6600 @ 2.40GHz
  stepping : 11
  ...
#+end_src

   *count processor (including cores):*

#+begin_src bash
  $ grep -c processor /proc/cpuinfo
#+end_src

** Section 6.5: Process monitoring and information gathering

   Overall you have two ways to monitor processes at linux host

*** Static monitoring

    Most widely used command is ~ps~ (i.e., process status) command is used to
    provide information about the currently running processes, including their
    process identification numbers (PIDs).

    Here few useful options to gather specific information.

    List processes in a hierarchy

#+begin_src bash
  $ ps -e -o pid,args --forest
#+end_src

    List processes sorted by % cpu usage

#+begin_src bash
  $ ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed '/^ 0.0 /d'
#+end_src

    List processes sorted by mem (KB) usage.

#+begin_src bash
  $ ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS
#+end_src

    List all threads for a particular process ("firefox-bin" process in example )

#+begin_src bash
  $ ps -C firefox-bin -L -o pid,tid,pcpu,state
#+end_src

    After finding specific process you can gather information related to it using
    ~lsof~ to list paths that process id has open

*** Interactive monitoring

    Most commonly known tool for dynamic monitoring is:

#+begin_src bash
  $ top
#+end_src

    That mostly default command that have huge amount options to filter and
    represent information in real time (in comparison to ~ps~ command.

    Still there are more advance options that can be considered and installed as
    ~top~ replacement

#+begin_src bash
  $ htop -d 5
#+end_src

    or

#+begin_src bash
  $ atop
#+end_src

     Which has ability to log all the activities into log file (default ~atop~ will
     log all the activity on every 600 seconds) To this list there are few
     specialised commands as ~iotop~ or ~iftop~

#+begin_src bash
  $ sudo iotop
#+end_src
